name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: macos-latest
    
    strategy:
      matrix:
        shell: [fish, zsh]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Fish shell
      if: matrix.shell == 'fish'
      run: |
        brew install fish
    
    - name: Install Zsh shell
      if: matrix.shell == 'zsh'
      run: |
        # Zsh is pre-installed on macOS, but let's make sure it's available
        zsh --version
    
    - name: Test manual installation
      run: |        
        # Test shell-specific manual installation
        if [ "${{ matrix.shell }}" = "fish" ]; then
          mkdir -p ~/.config/fish/{functions,completions}
          cp functions/finder.fish ~/.config/fish/functions/
          cp completions/finder.fish ~/.config/fish/completions/
        else
          echo 'source "'$(pwd)'/plugins/finder/finder.plugin.zsh"' >> ~/.zshrc
        fi
    
    - name: Test finder command
      run: |
        if [ "${{ matrix.shell }}" = "fish" ]; then
          # Test Fish version
          fish -c "finder --help"
          fish -c "finder --version"
          fish -c "finder ."
        else
          # Test Zsh version
          zsh -c "source ~/.zshrc && finder --help"
          zsh -c "source ~/.zshrc && finder --version"
          zsh -c "source ~/.zshrc && finder ."
        fi
    
    - name: Test error handling
      run: |
        if [ "${{ matrix.shell }}" = "fish" ]; then
          # Test error cases with Fish
          fish -c "finder /nonexistent/path" || echo "Expected error for nonexistent path"
        else
          # Test error cases with Zsh
          zsh -c "source ~/.zshrc && finder /nonexistent/path" || echo "Expected error for nonexistent path"
        fi
    
    - name: Test uninstallation
      run: |
        if [ "${{ matrix.shell }}" = "fish" ]; then
          rm ~/.config/fish/functions/finder.fish
          rm ~/.config/fish/completions/finder.fish
        else
          # Remove source line from .zshrc
          sed -i '' '/finder.plugin.zsh/d' ~/.zshrc
        fi

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
    
    - name: Lint shell scripts
      run: |        
        # Lint Fish script (basic syntax check)
        fish --no-execute functions/finder.fish || echo "Fish syntax check completed"
        
        # Lint Zsh script (basic syntax check)
        zsh -n plugins/finder/finder.plugin.zsh || echo "Zsh syntax check completed"

  check-links:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check markdown links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        use-verbose-mode: 'yes'
        config-file: '.github/workflows/mlc_config.json'

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run security scan
      run: |
        # Check for potential security issues in shell scripts
        echo "Checking for potential security issues..."
        
        # Look for unsafe patterns
        ! grep -r "eval.*\$" . --include="*.fish" --include="*.zsh" || {
          echo "Warning: Found potential eval with user input"
          exit 1
        }
        
        # Check for hardcoded paths that might be problematic
        ! grep -r "/tmp" . --include="*.fish" --include="*.zsh" || {
          echo "Info: Found /tmp usage - verify it's safe"
        }
        
        echo "Basic security checks passed"